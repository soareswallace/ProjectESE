C51 COMPILER V9.59.0.0   PROJ1                                                             03/11/2019 16:51:48 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE PROJ1
OBJECT MODULE PLACED IN .\Objects\Proj1.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Proj1.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND CODE PRINT(.\Listing
                    -s\Proj1.lst) TABS(2) OBJECT(.\Objects\Proj1.obj)

line level    source

   1          #include <REG51F.H>
   2          
   3          #define CORRECAO 7
   4          #define FrClk 12000000
   5          #define FreqTimer0_emHz 100
   6          #define VALOR_TH0 ((65536 - (FrClk / (12 * FreqTimer0_emHz)) + CORRECAO) >>8)     // >>8 é um shift (desloca
             -mento binário) de 8 posições para direita
   7          #define VALOR_TL0 ((65536 - (FrClk / (12 * FreqTimer0_emHz)) + CORRECAO) & 0xFF)
   8          
   9          unsigned short int cont_P1L = 0;
  10          unsigned short int cont_P1H = 0;
  11          
  12          // Interrupt -> cria um jump no vetor de interrupção
  13          void timer0_int (void) interrupt 1 using 2{ // dispositivo associado é 1 (timer0) no vetor de interrupção
  14   1        TR0 = 0;              // Desliga Timer0
  15   1        TH0 += VALOR_TH0;     // Programa contagem do Timer0 (já considera possíveis alterações)
  16   1        TL0 += VALOR_TL0;
  17   1        TR0 = 1;              // Habilita contagem do timer 0
  18   1        
  19   1        if(cont_P1L >= 100){
  20   2          cont_P1L = 0;
  21   2        } else{
  22   2          cont_P1L++;
  23   2        }
  24   1        if(cont_P1H >= 100){
  25   2          cont_P1H = 0;
  26   2        } else{
  27   2          cont_P1H++;
  28   2        }
  29   1      }
  30          
  31          void timer0_inicializa() {
  32   1        TR0 = 0;                      // Desliga Timer0
  33   1        TMOD = (TMOD & 0xF0) | 0x01;  // Timer 0 programado como timer de 16 bits
  34   1        TL0 = VALOR_TL0;
  35   1        TH0 = VALOR_TH0 + (unsigned char) CY;             // Programa contagem do Timer0
  36   1        ET0 = 1;                      // Habilita interrupcao do timer 0
  37   1        TR0 = 1;                      // Habilita contagem do timer 0
  38   1      }
  39          //Calcule o valor de CORRECAO!!! -> a correção é referente ao número de instruções executadas enquanto o t
             -imer está parado (não incrementa)
  40          sbit c1 = P2^0; //CL
  41          sbit c2 = P2^1; //CH
  42          
  43          void trocarP1L(){
  44   1        static char estado = 2;
  45   1        
  46   1        switch(estado) {
  47   2          case 0:
  48   2            if(c1){
  49   3              P1 = (P1&0xF0) | (P0&0x0F);
  50   3              estado = 1;
  51   3              break;
  52   3            }
C51 COMPILER V9.59.0.0   PROJ1                                                             03/11/2019 16:51:48 PAGE 2   

  53   2            break;
  54   2      
  55   2          case 1:
  56   2            if(cont_P1L == 0){
  57   3              estado = 2;
  58   3            } 
  59   2            break;
  60   2            
  61   2          case 2:
  62   2            P1 = (P1&0xF0);
  63   2            if (c1 == 0) {
  64   3              estado = 0;
  65   3            }
  66   2            break;
  67   2          
  68   2          default:
  69   2            estado = 2;
  70   2            break;
  71   2        }
  72   1      }
  73          
  74          void trocarP1H(){
  75   1        static char estado = 2;
  76   1        
  77   1        switch(estado) {
  78   2          case 0:
  79   2            if(c2){
  80   3              P1 = (P0&0xF0) | (P1&0x0F);
  81   3              estado = 1;     
  82   3              break;
  83   3            }
  84   2            break;
  85   2            
  86   2          case 1:
  87   2            if(cont_P1H == 0){
  88   3              estado = 2;
  89   3            }
  90   2            break;
  91   2            
  92   2          case 2:
  93   2            P1 = (P1&0x0F);
  94   2            if (c2 == 0) {
  95   3              estado = 0;
  96   3            }
  97   2            break;
  98   2          
  99   2          default:
 100   2            estado = 2;
 101   2            break;
 102   2        }
 103   1      }
 104          
 105          main(){ 
 106   1        EA = 0;
 107   1        
 108   1        timer0_inicializa(); // inicializa timer0
 109   1        
 110   1        EA=1; //Habilita o tratamento de interrupções (depois de inicializar para garantir a estabilidade do sist
             -ema - garantir que não sejam geradas interruções)
 111   1      
 112   1        // Configuração do Timer1 para ser timer/temporizador no modo 1
 113   1        /*
C51 COMPILER V9.59.0.0   PROJ1                                                             03/11/2019 16:51:48 PAGE 3   

 114   1        gate = 0;
 115   1        C/T = 0;
 116   1        M1 = 0;
 117   1        M0 = 1;
 118   1        */
 119   1        while(1){
 120   2          trocarP1L();
 121   2          trocarP1H();
 122   2        }
 123   1      }
C51 COMPILER V9.59.0.0   PROJ1                                                             03/11/2019 16:51:48 PAGE 4   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION timer0_int (BEGIN)
0000 C0E0              PUSH    ACC
0002 C0D0              PUSH    PSW
                                           ; SOURCE LINE # 13
                                           ; SOURCE LINE # 14
0004 C28C              CLR     TR0
                                           ; SOURCE LINE # 15
0006 74D8              MOV     A,#0D8H
0008 258C              ADD     A,TH0
000A F58C              MOV     TH0,A
                                           ; SOURCE LINE # 16
000C 74F7              MOV     A,#0F7H
000E 258A              ADD     A,TL0
0010 F58A              MOV     TL0,A
                                           ; SOURCE LINE # 17
0012 D28C              SETB    TR0
                                           ; SOURCE LINE # 19
0014 C3                CLR     C
0015 E500        R     MOV     A,cont_P1L+01H
0017 9464              SUBB    A,#064H
0019 E500        R     MOV     A,cont_P1L
001B 9400              SUBB    A,#00H
001D 4008              JC      ?C0001
                                           ; SOURCE LINE # 20
001F 750000      R     MOV     cont_P1L,#00H
0022 750000      R     MOV     cont_P1L+01H,#00H
                                           ; SOURCE LINE # 21
0025 8008              SJMP    ?C0002
0027         ?C0001:
                                           ; SOURCE LINE # 22
0027 0500        R     INC     cont_P1L+01H
0029 E500        R     MOV     A,cont_P1L+01H
002B 7002              JNZ     ?C0028
002D 0500        R     INC     cont_P1L
002F         ?C0028:
                                           ; SOURCE LINE # 23
002F         ?C0002:
                                           ; SOURCE LINE # 24
002F C3                CLR     C
0030 E500        R     MOV     A,cont_P1H+01H
0032 9464              SUBB    A,#064H
0034 E500        R     MOV     A,cont_P1H
0036 9400              SUBB    A,#00H
0038 4008              JC      ?C0003
                                           ; SOURCE LINE # 25
003A 750000      R     MOV     cont_P1H,#00H
003D 750000      R     MOV     cont_P1H+01H,#00H
                                           ; SOURCE LINE # 26
0040 8008              SJMP    ?C0005
0042         ?C0003:
                                           ; SOURCE LINE # 27
0042 0500        R     INC     cont_P1H+01H
0044 E500        R     MOV     A,cont_P1H+01H
0046 7002              JNZ     ?C0029
0048 0500        R     INC     cont_P1H
004A         ?C0029:
                                           ; SOURCE LINE # 28
                                           ; SOURCE LINE # 29
004A         ?C0005:
C51 COMPILER V9.59.0.0   PROJ1                                                             03/11/2019 16:51:48 PAGE 5   

004A D0D0              POP     PSW
004C D0E0              POP     ACC
004E 32                RETI    
             ; FUNCTION timer0_int (END)

             ; FUNCTION timer0_inicializa (BEGIN)
                                           ; SOURCE LINE # 31
                                           ; SOURCE LINE # 32
0000 C28C              CLR     TR0
                                           ; SOURCE LINE # 33
0002 E589              MOV     A,TMOD
0004 54F0              ANL     A,#0F0H
0006 4401              ORL     A,#01H
0008 F589              MOV     TMOD,A
                                           ; SOURCE LINE # 34
000A 758AF7            MOV     TL0,#0F7H
                                           ; SOURCE LINE # 35
000D E4                CLR     A
000E 33                RLC     A
000F 24D8              ADD     A,#0D8H
0011 F58C              MOV     TH0,A
                                           ; SOURCE LINE # 36
0013 D2A9              SETB    ET0
                                           ; SOURCE LINE # 37
0015 D28C              SETB    TR0
                                           ; SOURCE LINE # 38
0017 22                RET     
             ; FUNCTION timer0_inicializa (END)

             ; FUNCTION trocarP1L (BEGIN)
                                           ; SOURCE LINE # 43
                                           ; SOURCE LINE # 46
0000 E500        R     MOV     A,estado
0002 14                DEC     A
0003 601A              JZ      ?C0010
0005 14                DEC     A
0006 601F              JZ      ?C0012
0008 2402              ADD     A,#02H
000A 7025              JNZ     ?C0014
                                           ; SOURCE LINE # 47
000C         ?C0008:
                                           ; SOURCE LINE # 48
000C 30A025            JNB     c1,?C0015
                                           ; SOURCE LINE # 49
000F E580              MOV     A,P0
0011 540F              ANL     A,#0FH
0013 FF                MOV     R7,A
0014 E590              MOV     A,P1
0016 54F0              ANL     A,#0F0H
0018 4F                ORL     A,R7
0019 F590              MOV     P1,A
                                           ; SOURCE LINE # 50
001B 750001      R     MOV     estado,#01H
                                           ; SOURCE LINE # 51
001E 22                RET     
                                           ; SOURCE LINE # 52
                                           ; SOURCE LINE # 53
                                           ; SOURCE LINE # 55
001F         ?C0010:
                                           ; SOURCE LINE # 56
001F E500        R     MOV     A,cont_P1L+01H
0021 4500        R     ORL     A,cont_P1L
C51 COMPILER V9.59.0.0   PROJ1                                                             03/11/2019 16:51:48 PAGE 6   

0023 700F              JNZ     ?C0015
                                           ; SOURCE LINE # 57
                                           ; SOURCE LINE # 58
                                           ; SOURCE LINE # 59
0025 800A              SJMP    ?C0030
                                           ; SOURCE LINE # 61
0027         ?C0012:
                                           ; SOURCE LINE # 62
0027 5390F0            ANL     P1,#0F0H
                                           ; SOURCE LINE # 63
002A 20A007            JB      c1,?C0015
                                           ; SOURCE LINE # 64
002D E4                CLR     A
002E F500        R     MOV     estado,A
                                           ; SOURCE LINE # 65
                                           ; SOURCE LINE # 66
0030 22                RET     
                                           ; SOURCE LINE # 68
0031         ?C0014:
                                           ; SOURCE LINE # 69
0031         ?C0030:
0031 750002      R     MOV     estado,#02H
                                           ; SOURCE LINE # 70
                                           ; SOURCE LINE # 71
                                           ; SOURCE LINE # 72
0034         ?C0015:
0034 22                RET     
             ; FUNCTION trocarP1L (END)

             ; FUNCTION trocarP1H (BEGIN)
                                           ; SOURCE LINE # 74
                                           ; SOURCE LINE # 77
0000 E500        R     MOV     A,estado
0002 14                DEC     A
0003 601A              JZ      ?C0019
0005 14                DEC     A
0006 601F              JZ      ?C0021
0008 2402              ADD     A,#02H
000A 7025              JNZ     ?C0023
                                           ; SOURCE LINE # 78
000C         ?C0017:
                                           ; SOURCE LINE # 79
000C 30A125            JNB     c2,?C0024
                                           ; SOURCE LINE # 80
000F E590              MOV     A,P1
0011 540F              ANL     A,#0FH
0013 FF                MOV     R7,A
0014 E580              MOV     A,P0
0016 54F0              ANL     A,#0F0H
0018 4F                ORL     A,R7
0019 F590              MOV     P1,A
                                           ; SOURCE LINE # 81
001B 750001      R     MOV     estado,#01H
                                           ; SOURCE LINE # 82
001E 22                RET     
                                           ; SOURCE LINE # 83
                                           ; SOURCE LINE # 84
                                           ; SOURCE LINE # 86
001F         ?C0019:
                                           ; SOURCE LINE # 87
001F E500        R     MOV     A,cont_P1H+01H
0021 4500        R     ORL     A,cont_P1H
C51 COMPILER V9.59.0.0   PROJ1                                                             03/11/2019 16:51:48 PAGE 7   

0023 700F              JNZ     ?C0024
                                           ; SOURCE LINE # 88
                                           ; SOURCE LINE # 89
                                           ; SOURCE LINE # 90
0025 800A              SJMP    ?C0031
                                           ; SOURCE LINE # 92
0027         ?C0021:
                                           ; SOURCE LINE # 93
0027 53900F            ANL     P1,#0FH
                                           ; SOURCE LINE # 94
002A 20A107            JB      c2,?C0024
                                           ; SOURCE LINE # 95
002D E4                CLR     A
002E F500        R     MOV     estado,A
                                           ; SOURCE LINE # 96
                                           ; SOURCE LINE # 97
0030 22                RET     
                                           ; SOURCE LINE # 99
0031         ?C0023:
                                           ; SOURCE LINE # 100
0031         ?C0031:
0031 750002      R     MOV     estado,#02H
                                           ; SOURCE LINE # 101
                                           ; SOURCE LINE # 102
                                           ; SOURCE LINE # 103
0034         ?C0024:
0034 22                RET     
             ; FUNCTION trocarP1H (END)

             ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 105
                                           ; SOURCE LINE # 106
0000 C2AF              CLR     EA
                                           ; SOURCE LINE # 108
0002 120000      R     LCALL   timer0_inicializa
                                           ; SOURCE LINE # 110
0005 D2AF              SETB    EA
0007         ?C0025:
                                           ; SOURCE LINE # 119
                                           ; SOURCE LINE # 120
0007 120000      R     LCALL   trocarP1L
                                           ; SOURCE LINE # 121
000A 120000      R     LCALL   trocarP1H
                                           ; SOURCE LINE # 122
000D 80F8              SJMP    ?C0025
             ; FUNCTION main (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    224    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
